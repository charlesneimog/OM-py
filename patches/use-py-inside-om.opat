
(:patch
 (:name "use-py-inside-om")
 (:doc "")
 (:info
  (:created "2022/01/15 19:20:39")
  (:modified "2022/01/15 19:38:11")
  (:by "om-sharp")
  (:version 1.05))
 (:window (:size (1690 946)) (:position (64 64)))
 (:grid nil)
 (:lock t)
 (:boxes
  (:comment
   (:x 182)
   (:y 86)
   (:w 188)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "To test evaluate this!")
   (:id 0))
  (:box
   (:type :function)
   (:reference equal)
   (:group-id nil)
   (:name "equal")
   (:x 130)
   (:y 242)
   (:w 74)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input (:type :standard) (:name "X") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 222)
   (:y 174)
   (:w 190)
   (:h 31)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 0 1 2 3 4 5 6 7 8 9)))
   (:id 2))
  (:box
   (:type :special)
   (:reference if)
   (:group-id nil)
   (:name "if")
   (:x 125)
   (:y 413)
   (:w 345)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TEST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "THEN")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "else")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 390)
   (:y 344)
   (:w 147)
   (:h 31)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "I am not working")
   (:id 4))
  (:box
   (:type :function)
   (:reference om-beep-msg)
   (:group-id nil)
   (:name "om-beep-msg")
   (:x 188)
   (:y 304)
   (:w 117)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FORMAT-STRING")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 274)
   (:y 239)
   (:w 111)
   (:h 31)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "I am Woking")
   (:id 6))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 146)
   (:y 471)
   (:w 294)
   (:h 31)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "I am Woking")
   (:id 7))
  (:box
   (:type :function)
   (:reference seq)
   (:group-id nil)
   (:name "seq")
   (:x 278)
   (:y 348)
   (:w 59)
   (:h 31)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OP")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "op+")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "out") (:reactive nil))
    (:output (:name "op+1") (:reactive nil)))
   (:id 8))
  (:box
   (:type :interface)
   (:reference button)
   (:group-id nil)
   (:name "button")
   (:x 199)
   (:y 561)
   (:w 107)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:send-value "I am Woking")
   (:text "")
   (:inputs
    (:input
     (:type :key)
     (:name "send-value")
     (:value t)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 9))
  (:comment
   (:x 312)
   (:y 567)
   (:w 90)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "click me!!")
   (:id 10))
  (:box
   (:type :abstraction)
   (:reference
    (:object
     (:class run-py-f-internal)
     (:slots
      ((:name "    py    ")
       (:protected-p nil)
       (:icon :py-f)
       (:text
        (:list
         ";;; edit a valid python code, It will just run it."
         ";;; changing the variables you want to use "
         ";;; inside om-sharp to {til}d."
         ";;; The name 'LIST' CANNOT be used as a variable name."
         "(py_var () 
\"
from om_py import to_om

list_of_numbers = []

for x in range(10):
    list_of_numbers.append(x)

to_om(list_of_numbers)

\"  

     )"))))))
   (:group-id nil)
   (:name "    py    ")
   (:x 59)
   (:y 91)
   (:w 109)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 2)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 1)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 8 :out 1)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 1 :in 0)))))