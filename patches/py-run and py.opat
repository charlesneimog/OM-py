
(:patch
 (:name "py-run and py")
 (:doc "")
 (:info
  (:created "2022/01/27 15:36:41")
  (:modified "2022/01/29 1:55:24")
  (:by "om-sharp")
  (:version 1.05))
 (:window (:size (1924 1030)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :abstraction)
   (:reference
    (:object
     (:class run-py-f-internal)
     (:slots
      ((:name "    py    ")
       (:protected-p nil)
       (:icon :py-f)
       (:text
        (:list
         ";;; edit a valid python code, It will just run it."
         ";;; changing the variables you want to use "
         ";;; inside om-sharp to {til}d."
         ";;; The name 'LIST' CANNOT be used as a variable name."
         "(py_var () 
\"
from om_py import to_om

list_of_numbers = []

for x in range(10):
    list_of_numbers.append(x)

to_om(list_of_numbers)

\"  

     )"))))))
   (:group-id nil)
   (:name "    py    ")
   (:x 39)
   (:y 79)
   (:w 120)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:comment
   (:x 167)
   (:y 85)
   (:w 166)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Roda diretamente")
   (:id 1))
  (:box
   (:type :abstraction)
   (:reference
    (:object
     (:class run-py-f-internal)
     (:slots
      ((:name "    py    ")
       (:protected-p nil)
       (:icon :py-f)
       (:text
        (:list
         ";;; edit a valid python code, It will just run it."
         ";;; changing the variables you want to use "
         ";;; inside om-sharp to {til}d."
         ";;; The name 'LIST' CANNOT be used as a variable name."
         "(py_var (x) "
         "\""
         "from om_py import to_om"
         ""
         "list_of_numbers = []"
         ""
         "for x in range(~d):"
         "    list_of_numbers.append(x)"
         ""
         "to_om(list_of_numbers)"
         ""
         "\"  "
         ""
         "     )"))))))
   (:group-id nil)
   (:name "    py    ")
   (:x 81)
   (:y 199)
   (:w 120)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 119)
   (:y 164)
   (:w 43)
   (:h 34)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 20)
   (:id 3))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 18)
   (:y 317)
   (:w 410)
   (:h 57)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list (:list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19)))
   (:id 4))
  (:comment
   (:x 163)
   (:y 165)
   (:w 122)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "com variavel")
   (:id 5))
  (:comment
   (:x 226)
   (:y 201)
   (:w 241)
   (:h 48)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Tem que, no codigo python, trocar as variaveis por ~d.")
   (:id 6))
  (:box
   (:type :abstraction)
   (:reference
    (:object
     (:class ompyfunctioninternal)
     (:slots
      ((:name "    py    ")
       (:protected-p nil)
       (:icon :py-f)
       (:text
        (:list
         ";;; edit a valid python code,"
         ";;; changing the variables you want to use "
         ";;; inside om-sharp to {til}d."
         "(py_var (x y) "
         "\""
         "to_om(math.atan2(~d,~d)/math.pi*180) "
         "\")"))))))
   (:group-id nil)
   (:name "    py    ")
   (:x 761)
   (:y 182)
   (:w 195)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda :lambda)
   (:reactive nil)
   (:inputs
    (:input (:type :standard) (:name "X") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:library "OM-py")
   (:type :function)
   (:reference (:symbol "PY-ADD-VAR" "om-python"))
   (:group-id nil)
   (:name "py-add-var")
   (:x 824)
   (:y 276)
   (:w 409)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rest")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rest")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 989)
   (:y 105)
   (:w 120)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:library "OM-py")
   (:type :function)
   (:reference (:symbol "RUN-PY" "om-python"))
   (:group-id nil)
   (:name "run-py")
   (:x 748)
   (:y 575)
   (:w 87)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CODE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "cabecario")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:comment
   (:x 1242)
   (:y 276)
   (:w 301)
   (:h 48)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Gera codigo para nao importar os modules sempre; Grandes processamentos.")
   (:id 11))
  (:comment
   (:x 836)
   (:y 578)
   (:w 138)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Roda o codigo")
   (:id 12))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 1019)
   (:y 540)
   (:w 462)
   (:h 368)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size (1495 738)) (:position (32 32)))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "
to_om(math.atan2(1,10)/math.pi*180) 

to_om(math.atan2(2,9)/math.pi*180) 

to_om(math.atan2(3,8)/math.pi*180) 

to_om(math.atan2(4,7)/math.pi*180) 

to_om(math.atan2(5,6)/math.pi*180) 

to_om(math.atan2(6,5)/math.pi*180) 

to_om(math.atan2(7,4)/math.pi*180) 

to_om(math.atan2(8,3)/math.pi*180) 

to_om(math.atan2(9,2)/math.pi*180) 

to_om(math.atan2(10,1)/math.pi*180) 
"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 13))
  (:box
   (:library "OM-py")
   (:type :function)
   (:reference (:symbol "ADD-PYTHON-MODULES" "om-python"))
   (:group-id nil)
   (:name "add-python-modules")
   (:x 797)
   (:y 469)
   (:w 347)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :key)
     (:name "import")
     (:value "math")
     (:reactive nil))
    (:input
     (:type :key)
     (:name "from_import")
     (:value (:list "math" "sum"))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "import*")
     (:value "math")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 767)
   (:y 328)
   (:w 84)
   (:h 34)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list "math"))
   (:id 15))
  (:box
   (:type :function)
   (:reference (:symbol "CODE" "om-python"))
   (:group-id nil)
   (:name "code")
   (:x 1319)
   (:y 356)
   (:w 71)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PY-CODE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1215)
   (:y 406)
   (:w 175)
   (:h 34)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list "om_py" "to_om")))
   (:id 17))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 1105)
   (:y 187)
   (:w 96)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 989)
   (:y 191)
   (:w 87)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value list)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "value box")
   (:x 985)
   (:y 156)
   (:w 51)
   (:h 34)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value list)
   (:id 20))
  (:comment
   (:x 585)
   (:y 468)
   (:w 179)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "caso o modulo n esteja instalado ele vai pedir pra instalar")
   (:id 21))
  (:comment
   (:x 589)
   (:y 331)
   (:w 176)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "importa o modulo inteiro")
   (:id 22))
  (:comment
   (:x 1382)
   (:y 407)
   (:w 186)
   (:h 48)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "importa usando from module import function")
   (:id 23))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "value box")
   (:x 1061)
   (:y 365)
   (:w 67)
   (:h 34)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 24))
  (:comment
   (:x 1131)
   (:y 368)
   (:w 180)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Importa usando o *")
   (:id 25))
  (:box
   (:library "OM-py")
   (:type :function)
   (:reference (:symbol "ADD-PYTHON-MODULES" "om-python"))
   (:group-id nil)
   (:name "add-python-modules")
   (:x 60)
   (:y 595)
   (:w 347)
   (:h 34)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :key)
     (:name "import")
     (:value "math")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 196)
   (:y 560)
   (:w 76)
   (:h 34)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "vispy")
   (:id 27))
  (:comment
   (:x 408)
   (:y 597)
   (:w 231)
   (:h 48)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Caso o modulo n esteja instalado vai pedir pra instalar")
   (:id 28)))
 (:connections
  (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 10 :in 0))
   (:attributes (:color nil :style nil :modif (0 -21/79))))
  (:connection (:from (:box 8 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 19 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 10 :in 1)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif (0 -20/61))))
  (:connection (:from (:box 17 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 8 :in 2)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 8 :in 1)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 26 :in 0)))))