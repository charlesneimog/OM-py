
(:patch
 (:name "for-mac")
 (:doc "")
 (:info
  (:created "2022/01/27 15:36:41")
  (:modified "2022/06/14 17:03:35")
  (:by "om-sharp")
  (:version 1.06))
 (:window (:size (1920 1007)) (:position (0 25)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 301)
   (:y 275)
   (:w 166)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Roda diretamente")
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 441)
   (:y 54)
   (:w 43)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 20)
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 562)
   (:y 41)
   (:w 410)
   (:h 57)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list (:list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19)))
   (:id 2))
  (:comment
   (:x 485)
   (:y 55)
   (:w 122)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "com variavel")
   (:id 3))
  (:box
   (:library "OM-py")
   (:type :function)
   (:reference (:symbol "PY-ADD-VAR" "om-python"))
   (:group-id nil)
   (:name "py-add-var")
   (:x 824)
   (:y 276)
   (:w 409)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rest")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "rest")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 989)
   (:y 105)
   (:w 120)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:library "OM-py")
   (:type :function)
   (:reference (:symbol "RUN-PY" "om-python"))
   (:group-id nil)
   (:name "run-py")
   (:x 748)
   (:y 575)
   (:w 87)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CODE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "cabecario")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:comment
   (:x 1242)
   (:y 276)
   (:w 301)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Gera codigo para nao importar os modules sempre; Grandes processamentos.")
   (:id 7))
  (:comment
   (:x 836)
   (:y 578)
   (:w 138)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Roda o codigo")
   (:id 8))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 884)
   (:y 447)
   (:w 84)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list "math"))
   (:id 9))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 886)
   (:y 377)
   (:w 175)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list "numpy" "abs")))
   (:id 10))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 1105)
   (:y 187)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:comment
   (:x 585)
   (:y 468)
   (:w 179)
   (:h 50)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "caso o modulo n esteja instalado ele vai pedir pra instalar")
   (:id 12))
  (:comment
   (:x 589)
   (:y 331)
   (:w 176)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "importa o modulo inteiro")
   (:id 13))
  (:comment
   (:x 1068)
   (:y 380)
   (:w 186)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "importa usando from module import function")
   (:id 14))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1261)
   (:y 398)
   (:w 111)
   (:h 31)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list "librosa"))
   (:id 15))
  (:comment
   (:x 1371)
   (:y 399)
   (:w 180)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Importa usando o *")
   (:id 16))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 196)
   (:y 560)
   (:w 76)
   (:h 34)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "vispy")
   (:id 17))
  (:comment
   (:x 408)
   (:y 597)
   (:w 231)
   (:h 36)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Caso o modulo n esteja instalado vai pedir pra instalar")
   (:id 18))
  (:box
   (:library "OM-py")
   (:type :function)
   (:reference (:symbol "PY-ADD-EXT-MODULES" "om-python"))
   (:group-id nil)
   (:name "py-add-ext-modules")
   (:x 150)
   (:y 618)
   (:w 167)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :key)
     (:name "import")
     (:value "math")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:library "OM-py")
   (:type :function)
   (:reference (:symbol "PY->TEXT" "om-python"))
   (:group-id nil)
   (:name "py->text")
   (:x 1546)
   (:y 364)
   (:w 95)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PYTHON")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 1272)
   (:y 502)
   (:w 416)
   (:h 186)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size (500 708)) (:position (64 64)))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "x = 1
y = 10

to_om(math.atan2(x,y)/math.pi*180) 
x = 2
y = 9

to_om(math.atan2(x,y)/math.pi*180) 
x = 3
y = 8

to_om(math.atan2(x,y)/math.pi*180) 
x = 4
y = 7

to_om(math.atan2(x,y)/math.pi*180) 
x = 5
y = 6

to_om(math.atan2(x,y)/math.pi*180) 
x = 6
y = 5

to_om(math.atan2(x,y)/math.pi*180) 
x = 7
y = 4

to_om(math.atan2(x,y)/math.pi*180) 
x = 8
y = 3

to_om(math.atan2(x,y)/math.pi*180) 
x = 9
y = 2

to_om(math.atan2(x,y)/math.pi*180) 
x = 10
y = 1

to_om(math.atan2(x,y)/math.pi*180) 
"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 21))
  (:box
   (:library "OM-py")
   (:type :function)
   (:reference (:symbol "PY-ADD-EXT-MODULES" "om-python"))
   (:group-id nil)
   (:name "py-add-ext-modules")
   (:x 896)
   (:y 492)
   (:w 167)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :key)
     (:name "import")
     (:value "math")
     (:reactive nil))
    (:input
     (:type :key)
     (:name "from_import")
     (:value (:list "math" "sum"))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "import*")
     (:value "math")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :function)
   (:reference (:symbol "MODULES" "om-python"))
   (:group-id nil)
   (:name "modules")
   (:x 1020)
   (:y 588)
   (:w 88)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PY-EXTERNALS-MOD")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 633)
   (:y 701)
   (:w 416)
   (:h 186)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "
from om_py import to_om
import math
from numpy import abs
from librosa import *"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 24))
  (:comment
   (:x 345)
   (:y 705)
   (:w 282)
   (:h 22)
   (:fgcolor
    (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t)))
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Note that to_om always will be imported!")
   (:id 25))
  (:box
   (:library "OM-py")
   (:type :function)
   (:reference (:symbol "PY-ADD-EXT-MODULES" "om-python"))
   (:group-id nil)
   (:name "py-add-ext-modules")
   (:x 786)
   (:y 417)
   (:w 167)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :key)
     (:name "import")
     (:value "math")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "value box")
   (:x 840)
   (:y 382)
   (:w 61)
   (:h 31)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "math")
   (:id 27))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 43)
   (:y 342)
   (:w 410)
   (:h 57)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:reactive nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 0 1 2 3 4 5 6 7 8 9)))
   (:id 28))
  (:box
   (:type :abstraction)
   (:reference
    (:object
     (:class run-py-f-internal)
     (:slots
      ((:name " new-py-script ")
       (:protected-p nil)
       (:icon :py-f)
       (:text
        (:list
         ";;; edit a valid python code, It will just run it."
         ";;; changing the variables you want to use "
         ";;; inside om-sharp to {til}d."
         ";;; The name 'LIST' CANNOT be used as a variable name."
         "(py_var () 
\"
from om_py.python_to_om import to_om

list_of_numbers = []

for x in range(10):
    list_of_numbers.append(x)

to_om(list_of_numbers)

\"  )"))))))
   (:group-id nil)
   (:name " new-py-script ")
   (:x 191)
   (:y 272)
   (:w 110)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "MAC")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1715 500)) (:position (145 170)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "my-function")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1545 500)) (:position (174 199)))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION"
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           "(lambda ()"
           ""
           "#+mac (defvar *activate-virtual-enviroment* (om::string+ \"source \" (namestring (merge-pathnames \"OM-py-env/bin/activate\" (om::tmpfile \"\")))) \"nil\")"
           ""
           ""
           "(x-append (om::string+ \"python3 -m venv \" (namestring (merge-pathnames \"OM-py-env/\" (om::tmpfile \"\")))) (om::string+ *activate-virtual-enviroment* \" && python3 -m pip install om_py\")))"))))
       (:group-id nil)
       (:name "my-function")
       (:x 106)
       (:y 61)
       (:w 168)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:pre-delay 0)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 75)
       (:y 146)
       (:w 599)
       (:h 77)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:reactive nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (1141 500)) (:position (203 228)))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "python3 -m venv /Users/estudio/Documents/OM#/temp-files/OM-py-env/"
             "source /Users/estudio/Documents/OM#/temp-files/OM-py-env/bin/activate && python3 -m pip install om_py"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 1))
      (:comment
       (:x 683)
       (:y 150)
       (:w 192)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "<== Select and press V")
       (:id 2))
      (:comment
       (:x 682)
       (:y 195)
       (:w 302)
       (:h 22)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "<== RUN THIS TWO LINES ON YOUR TERMINAL")
       (:id 3)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1))))))
   (:group-id nil)
   (:name "MAC")
   (:x 88)
   (:y 53)
   (:w 90)
   (:h 60)
   (:color
    (:color-or-nil
     (:color
      (:color
       0.9885574579238892D0
       0.0D0
       0.17369507253170014D0
       0.654902))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:pre-delay 0)
   (:lock nil)
   (:lambda nil)
   (:reactive nil)
   (:inputs)
   (:outputs)
   (:id 30))
  (:comment
   (:x 184)
   (:y 56)
   (:w 110)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "<=== ME FIRST!!!!")
   (:id 31))
  (:comment
   (:x 186)
   (:y 72)
   (:w 110)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "<=== ME FIRST!!!!")
   (:id 32))
  (:comment
   (:x 188)
   (:y 90)
   (:w 110)
   (:h 30)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "<=== ME FIRST!!!!")
   (:id 33)))
 (:connections
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif (0 -21/79))))
  (:connection (:from (:box 4 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 4 :in 2)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 22 :in 2)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 23 :in 0)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 26 :in 0)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 0)))))